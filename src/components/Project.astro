---
interface Props {
  title: string;
  description: string;
  link?: string;
  githubLink?: string;
  image?: string;
  skills?: string[]; // ← nueva propiedad
}

const { title, description, link, githubLink, image, skills = [] } = Astro.props as Props;
const imageSrc = image || '/placeholder.png';
const imageAlt = `Screenshot of ${title}`;
---

<div class="bg-gray-950 dark:bg-gray-800 rounded-xl p-4 shadow-md hover:shadow-xl hover:scale-105 transition-transform duration-300">
  <!-- Imagen del proyecto -->
  <div class="h-40 w-full overflow-hidden rounded mb-4">
    <img
      src={imageSrc}
      alt={imageAlt}
      class="w-full h-full object-cover"
    />
  </div>

  <!-- Título y descripción -->
  <h3 class="font-semibold text-gray-50 dark:text-gray-50 mb-2">{title}</h3>
  <p class="text-sm text-gray-50 dark:text-gray-300 mb-4 leading-relaxed">{description}</p>

  <!-- Skills usadas -->
  {skills.length > 0 && (
    <div class="flex flex-wrap gap-2 mb-4">
      {skills.map(skill => (
        <span class="px-2 py-1 bg-yellow-200 dark:bg-gray-700 text-gray-900 dark:text-gray-200 rounded-lg text-xs">
          {skill}
        </span>
      ))}
    </div>
  )}

  <!-- Enlaces -->
  <div class="flex gap-4">
    {link && (
      <a
        href={link}
        target="_blank"
        rel="noopener noreferrer"
        class="text-yellow-500 hover:underline font-medium"
      >
        Live Demo
      </a>
    )}
    {githubLink && (
      <a
        href={githubLink}
        target="_blank"
        rel="noopener noreferrer"
        class="text-yellow-500 hover:underline font-medium"
      >
        GitHub
      </a>
    )}
  </div>
</div>
